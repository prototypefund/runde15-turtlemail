include:
  - project: 'kmohrf/gitlabfilet'
    ref: 'v1.3.0'
    file:
      - '/templates/python.gitlab-ci.yml'
      - '/templates/container.gitlab-ci.yml'

variables:
  GITLABFILET_IMAGE: git-registry.hack-hro.de:443/kmohrf/docker-recipes/debbuild-python-webdev:bookworm

default:
  tags:
    - fast-io
    - fast-network
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .npm/

stages:
  - test
  - build
  - deploy

.js-tests:
  stage: test
  image: node:lts-alpine
  before_script:
    - ADBLOCK=true npm ci --cache .npm --prefer-offline

lint::js:
  extends: .js-tests
  script:
    - npm run lint

test::js:
  extends: .js-tests
  script:
    - npm run test

deploy::container-image:
  variables:
    KANIKO_ARGS: --target production


build_to_docker_registry:
  tags:
  - docker
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    CD_DOCKER_REPO: $CI_REGISTRY_IMAGE/turtlemail
    CD_REF_NAME: latest
    GIT_SUBMODULE_STRATEGY: recursive
  script:
  - echo "$CI_REGISTRY_IMAGE"
  - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  - /kaniko/executor --context ./ --dockerfile Dockerfile --destination $CD_DOCKER_REPO:$CD_REF_NAME --registry-mirror docker-mirror.collocall.de
  only:
  - main

deploy_prod:
  variables:
    K8S_NAMESPACE: "uni-turtlemail"
    K8S_DEPLOYMENT: "uni-turtlemail"
  stage: deploy
  trigger: "kubernetes/cluster1-uni-services"
  only:
  - main
